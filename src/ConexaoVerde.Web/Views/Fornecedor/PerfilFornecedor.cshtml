@model FornecedorPerfilModel

@{
    ViewData["Title"] = "Perfil do Fornecedor";
    var endereco = Model.Fornecedor.Endereco;
    var enderecoCompleto = $"{endereco.Rua}, {endereco.Numero}, {endereco.Cidade} - {endereco.Estado}, {endereco.CEP}";
}

<style>
    /* Estilo para a área de mensagens com rolagem */
    #chatMessages {
        max-height: 300px;
        overflow-y: auto;
    }

    /* Alterar cores para tons de verde */
    .btn-green {
        background-color: #4CAF50; 
        color: white;
    }

    .btn-green:hover {
        background-color: #388E3C;
    }

</style>

<section class="bg-white py-16">
<div class="container mx-auto px-6">
    <!-- Seta de Voltar -->
    <div class="mb-8">
        <a href="/Fornecedor/ListarFornecedor"
           class="inline-flex items-center px-4 py-2 btn-green font-semibold text-lg rounded-lg">
            <i class="fas fa-arrow-left mr-3"></i>
            Voltar
        </a>
    </div>

    <!-- Título -->
    <h1 class="text-4xl font-semibold text-gray-800 text-center mb-12">
        <span class="text-3xl font-bold text-black mb-8 text-center">@Model.Fornecedor.NomeFantasia</span>
    </h1>

    <div class="flex flex-wrap justify-center gap-12">
        <!-- Imagem do Fornecedor -->
        <div class="w-full md:w-2/3 lg:w-1/3 xl:w-1/4 mb-8 flex flex-col items-center">
            <img src="@(Model.Usuario.FotoPerfil != null ? $"data:image/png;base64,{Convert.ToBase64String(Model.Usuario.FotoPerfil)}" : "https://via.placeholder.com/400x400")"
                 alt="Imagem Fornecedor"
                 class="w-56 h-56 rounded-full shadow-xl border-4 border-green-500 mb-6">
        </div>
        <!-- Informações do Fornecedor -->
        <div class="md:w-2/3 md:pl-8">
            <div class="mb-6">
                <!-- Título com divisor -->
                <h2 class="text-2xl font-bold text-gray-800 flex items-center">
                    <i class="fas fa-building text-green-500 mr-2"></i>
                    Informações do Fornecedor
                </h2>
                <div class="mt-2 h-1 bg-green-500 w-96 rounded"></div>

                <!-- Conteúdo -->
                <div class="mt-6 bg-gray-50 p-8 rounded-xl shadow-lg">
                    <!-- Razão Social -->
                    <div class="flex items-center mb-4">
                        <i class="fas fa-id-card text-green-500 text-xl mr-3"></i>
                        <h3 class="text-xl font-semibold text-gray-800">@Model.Fornecedor.RazaoSocial</h3>
                    </div>

                    <!-- CNPJ -->
                    <div class="flex items-center mb-4">
                        <i class="fas fa-file-alt text-green-500 text-xl mr-3"></i>
                        <p class="text-lg text-gray-600">
                            <strong>Cnpj:</strong>
                            <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm">
                                @Model.Fornecedor.Cnpj
                            </span>
                        </p>
                    </div>

                    <!-- Descrição -->
                    <div class="flex items-start mt-4">
                        <i class="fas fa-info-circle text-green-500 text-xl mr-3"></i>
                        <p class="text-lg text-gray-700 leading-relaxed">
                            <strong>Sobre:</strong> @Model.Fornecedor.Descricao
                        </p>
                    </div>
                </div>
            </div>

            <!-- Informações de Contato -->
            <div class="flex flex-col items-center text-center">
                <h2 class="text-3xl font-bold text-black mb-8">Contatos</h2>
                <ul class="space-y-4 text-gray-700">
                    <!-- Telefone -->
                    <li class="flex items-center space-x-2">
                        <i class="fas fa-phone-alt text-green-500"></i>
                        <p class="text-lg">
                            <strong>Telefone:</strong> @Model.Usuario.Telefone
                        </p>
                    </li>
                    <!-- E-mail -->
                    <li class="flex items-center space-x-2">
                        <i class="fas fa-envelope text-green-500"></i>
                        <p class="text-lg">
                            <strong>E-mail:</strong> @Model.Usuario.Email
                        </p>
                    </li>
                    <!-- Endereço -->
                    <li class="flex items-center space-x-2">
                        <i class="fas fa-map-marker-alt text-green-500"></i>
                        <p class="text-lg">
                            <strong>Endereço:</strong> @enderecoCompleto
                        </p>
                    </li>
                </ul>
            </div>

            <!-- Mapa do Endereço -->
            <div class="mt-16">
                <div class="w-full" style="height: 500px;">
                    <iframe src="https://www.google.com/maps?q=@enderecoCompleto&output=embed" width="100%"
                            height="100%" style="border:0;">
                    </iframe>
                </div>
            </div>
        </div>
    </div>

    <!-- Galeria de Produtos -->
    <section class="flex flex-col lg:h-screen justify-center items-center">
        <h2 class="text-3xl font-bold text-black mb-8 text-center">
            Produtos de @Model.Fornecedor.NomeFantasia
        </h2>
        <div class="flex flex-wrap justify-center md:justify-start mt-6 gap-8">
            @foreach (var produto in Model.Produtos)
            {
                <div class="relative flex flex-col items-center w-full md:w-64 bg-white rounded-3xl shadow-lg transition-transform transform hover:scale-105">
                    <img src="data:image/jpeg;base64,@produto.ImgProdutoBase64"
                         alt="@produto.NomeProduto"
                         class="w-full h-64 object-cover rounded-t-3xl">
                    <div class="p-6">
                        <h3 class="text-lg font-semibold text-gray-800">@produto.NomeProduto</h3>
                        <p class="text-sm text-gray-600 mt-2">R$ @produto.Preco.ToString("F2")</p>
                    </div>
                </div>
            }
        </div>
    </section>

    <!-- Seção de Feedbacks -->
    <section class="bg-white py-16">
        <div class="container mx-auto px-6">
            <h2 class="text-3xl font-bold text-black mb-8 text-center">Feedbacks e Avaliações</h2>

            <!-- Comentários dos usuários -->
            <div class="space-y-6">
                @foreach (var comentario in Model.Avaliacoes ?? [])
                {
                    <div class="flex items-start gap-4 bg-gray-50 p-6 rounded-xl shadow-lg">
                        <!-- Foto de Perfil do Usuário -->
                        <img src="@(comentario.Cliente.FotoPerfil != null ? $"data:image/png;base64,{Convert.ToBase64String(comentario.Cliente.FotoPerfil)}" : "https://via.placeholder.com/100")"
                             alt="Foto Perfil" class="w-16 h-16 rounded-full border-2 border-green-500">
                        <div class="flex-1">
                            <!-- Nome do Usuário -->
                            <h3 class="font-semibold text-lg text-gray-800">@comentario.Cliente!.Nome</h3>
                            <!-- Estrelas -->
                            <div class="flex items-center text-yellow-500 mt-2">
                                @for (var i = 0; i < 5; i++)
                                {
                                    <i class="fas fa-star @(i < comentario.Nota ? "text-yellow-500" : "text-gray-300")"></i>
                                }
                            </div>
                            <!-- Comentário -->
                            <p class="text-gray-600 mt-4">@comentario.Comentario</p>
                        </div>
                    </div>
                }
            </div>

            <!-- Avaliação de 5 Estrelas e Comentário -->
            <div class="mt-12 bg-gray-50 p-8 rounded-xl shadow-lg">
                <h3 class="text-2xl font-semibold text-gray-800 mb-6">Deixe sua Avaliação</h3>

                <form id="feedbackForm" action="@Url.Action("AvaliarFornecedor", "Fornecedor")" method="post" onsubmit="return handleFormSubmit(event)">
                    <div class="flex items-center mb-4">
                        <label for="rating" class="text-lg font-medium text-gray-700 mr-4">Avaliação:</label>
                        <div class="flex items-center space-x-1" id="ratingStars">
                            @for (var i = 1; i <= 5; i++)
                            {
                                <div class="star cursor-pointer text-2xl text-gray-300" data-value="@i">
                                    <i class="fas fa-star"></i>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Campo de Comentário -->
                    <div class="mb-6">
                        <label for="comentario" class="block text-sm font-medium text-gray-700">Comentário</label>
                        <textarea id="comentario" name="Comentario" rows="4"
                                      class="mt-2 p-2 w-full border rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 text-gray-800"
                                      placeholder="Escreva seu comentário"></textarea>
                    </div>

                    <input type="hidden" name="FornecedorId" value="@Model.Fornecedor.Id"/>
                    <input type="hidden" name="ClienteId" value="@ViewBag.ClienteId"/>

                    <button type="submit" id="submitButton" class="btn-green px-6 py-3 rounded-lg text-white flex items-center justify-center">
                        <span id="buttonText">Enviar Avaliação</span>
                        <div id="loadingSpinner" class="hidden ml-2">
                            <i class="fas fa-spinner fa-spin"></i>
                        </div>
                    </button>
                </form>
            </div>
        </div>
    </section>

    <!-- Botão de Chat -->
    <button id="chatToggleButton" class="p-6 btn-green rounded-full fixed bottom-6 right-6 shadow-lg">
        <i class="fas fa-comment-alt fa-3x"></i>
    </button>

    <!-- Caixa de Chat -->
    <div id="chatContainer"
         class="hidden fixed bottom-24 right-6 bg-white p-4 rounded-lg shadow-lg w-80 max-w-xs">
        <div id="chatHeader" class="flex items-center mb-4">
            <img src="@(Model.Usuario.FotoPerfil != null ? $"data:image/png;base64,{Convert.ToBase64String(Model.Usuario.FotoPerfil)}" : "https://via.placeholder.com/400x400")"
                 alt="Foto Fornecedor" class="w-12 h-12 rounded-full border-2 border-green-500">
            <span class="ml-4 text-lg font-semibold text-gray-800">@Model.Fornecedor.RazaoSocial</span>
        </div>
        <div id="chatMessages" class="flex-1 overflow-y-auto mb-4"></div>
        <div class="flex items-center space-x-2">
            <input id="userMessage" type="text" placeholder="Escreva uma mensagem"
                   class="w-full px-4 py-2 text-lg border rounded-lg text-gray-600">
            <button id="sendButton" class="w-12 h-12 btn-green flex items-center justify-center">
                <i class="fas fa-paper-plane"></i>
            </button>
        </div>
    </div>
</div>
</section>

<script src="~/js/perfilfornecedor.js" asp-append-version="true"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const chatToggleButton = document.getElementById('chatToggleButton');
        const chatContainer = document.getElementById('chatContainer');
        const chatMessages = document.getElementById('chatMessages');
        const userMessageInput = document.getElementById('userMessage');
        const sendButton = document.getElementById('sendButton');

        // Mensagem automática inicial
        const initialMessage = "Olá! Esta é uma mensagem automática. Como posso ajudar?";
        const botMessageElement = document.createElement('div');
        botMessageElement.classList.add('flex', 'justify-start', 'mb-4');
        botMessageElement.innerHTML = `
        <div class="bg-gray-300 text-black px-4 py-2 rounded-lg max-w-xs">
            ${initialMessage}
        </div>
    `;
        chatMessages.appendChild(botMessageElement);

        // Certifique-se de que o chat comece escondido
        chatContainer.classList.add('hidden');

        // Alterna a visibilidade do chat e ajusta o botão
        chatToggleButton.addEventListener('click', function () {
            // Alterna a classe 'hidden' para mostrar ou esconder o chat
            chatContainer.classList.toggle('hidden');

            // Alterando o conteúdo do botão conforme a visibilidade do chat
            if (chatContainer.classList.contains('hidden')) {
                chatToggleButton.innerHTML = `<i class="fas fa-comment-alt"></i>`;
            } else {
                chatToggleButton.innerHTML = `<i class="fas fa-times"></i>`;

                // Quando o chat for aberto, focar no campo de mensagem
                userMessageInput.focus();
            }
        });

        // Função para rolar para a última mensagem
        function scrollToBottom() {
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Função para enviar a mensagem
        function sendMessage() {
            const userMessage = userMessageInput.value;

            if (userMessage.trim() !== "") {
                const userMessageElement = document.createElement('div');
                userMessageElement.classList.add('flex', 'justify-end', 'mb-4');
                userMessageElement.innerHTML = `
                <div class="bg-green-500 text-white px-4 py-2 rounded-lg max-w-xs">
                    ${userMessage}
                </div>
            `;
                chatMessages.appendChild(userMessageElement);
                userMessageInput.value = ""; // Limpar o campo de entrada

                // Enviar a mensagem para o backend
                var fornecedorId = @Model.Fornecedor.Id
                fetch('/Fornecedor/ChatResposta', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        fornecedorId: fornecedorId,
                        mensagem: userMessage
                    })
                }).then(response => response.json()).then(data => {
                    if (data.success) {
                        const botResponseElement = document.createElement('div');
                        botResponseElement.classList.add('flex', 'justify-start', 'mb-4');
                        botResponseElement.innerHTML = `
                        <div class="bg-gray-300 text-black px-4 py-2 rounded-lg max-w-xs">
                            ${data.responseMessage}
                        </div>
                    `;
                        chatMessages.appendChild(botResponseElement);
                    }
                });

                // Rolar para a última mensagem
                scrollToBottom();
            }
        }

        // Evento para enviar mensagem ao pressionar Enter
        userMessageInput.addEventListener('keydown', function (event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Evita que o formulário seja enviado ao pressionar Enter
                sendMessage();
            }
        });

        // Evento de clique no botão de envio
        sendButton.addEventListener('click', function () {
            sendMessage();
        });

        // Rolar para a última mensagem quando o chat é aberto pela primeira vez
        scrollToBottom();
    });
</script>