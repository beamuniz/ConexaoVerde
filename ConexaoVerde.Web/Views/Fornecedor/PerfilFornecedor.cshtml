@model FornecedorPerfilModel

@{
    ViewData["Title"] = "Perfil do Fornecedor";
    var endereco = Model.Fornecedor.Endereco;
    var enderecoCompleto = $"{endereco.Rua}, {endereco.Numero}, {endereco.Cidade} - {endereco.Estado}, {endereco.CEP}";
}

<head>
    <!-- Adicionar o link do FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"/>
</head>

<section class="bg-white dark:bg-gray-900 py-16">
    <div class="container mx-auto px-6">
        <!-- Seta de Voltar -->
        <div class="mb-8">
            <a href="/Fornecedor/ListarFornecedor" class="inline-flex items-center px-4 py-2 bg-blue-500 text-white font-semibold text-lg rounded-lg hover:bg-blue-600">
                <i class="fas fa-arrow-left mr-3"></i>
                Voltar
            </a>
        </div>

        <!-- Título -->
        <h1 class="text-4xl font-semibold text-gray-800 dark:text-white text-center mb-12">
            Perfil do Fornecedor - <span class="text-blue-500">@Model.Fornecedor.NomeFantasia</span>
        </h1>

        <div class="flex flex-wrap justify-center gap-12">
            <!-- Imagem do Fornecedor -->
            <div class="w-full md:w-2/3 lg:w-1/3 xl:w-1/4 mb-8">
                <img src="@(Model.Usuario.FotoPerfil != null ? $"data:image/png;base64,{Convert.ToBase64String(Model.Usuario.FotoPerfil)}" : "https://via.placeholder.com/400x400")"
                     alt="Imagem Fornecedor"
                     class="w-56 h-56 rounded-full shadow-xl border-4 border-blue-500">
            </div>

            <!-- Informações do Fornecedor -->
            <div class="w-full md:w-2/3 lg:w-2/3 xl:w-2/3">
                <div class="mb-6">
                    <h2 class="text-3xl font-semibold text-gray-800 dark:text-white">@Model.Fornecedor.RazaoSocial</h2>
                    <div class="mt-4 bg-gray-100 dark:bg-gray-800 p-6 rounded-lg shadow-lg">
                        <p class="text-lg text-gray-600 dark:text-gray-300 mt-2">
                            CNPJ:
                            <span class="font-semibold">@Model.Fornecedor.Cnpj</span>
                        </p>
                        <p class="text-lg text-gray-600 dark:text-gray-300 mt-4">
                            <strong>Sobre:</strong> @*@Model.Fornecedor.Descricao*@
                        </p>
                    </div>
                </div>

                <!-- Informações de Contato -->
                <div class="mt-8">
                    <h3 class="text-2xl font-semibold text-gray-800 dark:text-white">Entre em Contato</h3>
                    <div class="mt-4">
                        <p class="text-lg text-gray-600 dark:text-gray-300">
                            <strong>Telefone:</strong> @Model.Usuario.Telefone
                        </p>
                        <p class="text-lg text-gray-600 dark:text-gray-300">
                            <strong>E-mail:</strong> @Model.Usuario.Email
                        </p>
                        <p class="text-lg text-gray-600 dark:text-gray-300">
                            <strong>Endereço:</strong> @enderecoCompleto
                        </p>
                    </div>
                </div>

                <!-- Mapa do Endereço -->
                <div class="mt-16">
                    <div class="w-full" style="height: 500px;">
                        <iframe
                            src="https://www.google.com/maps?q=@enderecoCompleto&output=embed"
                            width="100%" height="100%" style="border:0;">
                        </iframe>
                    </div>
                </div>
            </div>
        </div>

        <!-- Galeria de Produtos -->
        <div class="mt-16">
            <h2 class="text-3xl font-semibold text-gray-800 dark:text-white text-center mb-8">
                Produtos de @Model.Fornecedor.NomeFantasia
            </h2>

            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
                @foreach (var produto in Model.Produtos)
                {
                    <div class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg overflow-hidden">
                        <img src="data:image/jpeg;base64,@produto.ImgProdutoBase64" alt="@produto.NomeProduto" class="w-full h-48 object-cover">
                        <div class="p-6">
                            <h3 class="text-xl font-semibold text-gray-800 dark:text-white">@produto.NomeProduto</h3>
                            <p class="text-sm text-gray-600 dark:text-gray-300 mt-2">R$ @produto.Preco.ToString("F2")</p>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Botão Flutuante de Chat -->
        <button id="chatToggleButton" class="fixed bottom-6 right-6 p-3 bg-blue-500 text-white rounded-full shadow-lg hover:bg-blue-600 focus:outline-none focus:ring-4 focus:ring-blue-300">
            <i class="fas fa-comment-dots text-xl"></i>
        </button>

        <!-- Caixa de Chat -->
        <div id="chatContainer" class="hidden fixed bottom-20 right-6 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg w-80 max-w-xs">
            <div id="chatHeader" class="flex items-center">
                <img src="@(Model.Usuario.FotoPerfil != null ? $"data:image/png;base64,{Convert.ToBase64String(Model.Usuario.FotoPerfil)}" : "https://via.placeholder.com/400x400")"
                     alt="Foto Fornecedor" class="w-12 h-12 rounded-full border-2 border-blue-500">
                <span class="ml-4 text-lg font-semibold text-gray-800 dark:text-black">@Model.Fornecedor.RazaoSocial</span>
            </div>

            <!-- Área de mensagens -->
            <div id="chatMessages" class="flex-1 overflow-y-auto mt-4">
                <!-- Mensagens aparecem aqui -->
            </div>

            <!-- Caixa de input de mensagens -->
            <div class="flex items-center space-x-2 mt-4">
                <input id="userMessage" type="text" placeholder="Escreva uma mensagem" class="w-full px-4 py-2 text-lg border rounded-lg">
                <button id="sendButton" class="w-12 h-12 bg-blue-500 text-white rounded-full flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>
            </div>
        </div>

        <!-- Popover -->
        <button data-popover-target="popover-default" type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 mt-8">
            Mostrar Detalhes
        </button>

        <div id="popover-default" data-popover role="tooltip" class="absolute z-10 invisible inline-block w-64 text-sm text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-0 dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800">
            <div class="px-3 py-2 bg-gray-100 border-b border-gray-200 rounded-t-lg dark:border-gray-600 dark:bg-gray-700">
                <h3 class="font-semibold text-gray-900 dark:text-white">Detalhes do Fornecedor</h3>
            </div>
            <div class="px-3 py-2">
                <p>Veja mais sobre o fornecedor e os produtos que ele oferece. Entre em contato diretamente para mais informações!</p>
            </div>
            <div data-popper-arrow></div>
        </div>

    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const chatToggleButton = document.getElementById('chatToggleButton');
        const chatContainer = document.getElementById('chatContainer');
        const chatMessages = document.getElementById('chatMessages');
        const sendButton = document.getElementById('sendButton');
        const userMessage = document.getElementById('userMessage');
        
        // Toggle Chat visibility
        chatToggleButton.addEventListener('click', function () {
            chatContainer.classList.toggle('hidden');
        });

        // Send message in chat
        sendButton.addEventListener('click', function () {
            if (userMessage.value.trim()) {
                const message = document.createElement('div');
                message.classList.add('bg-blue-100', 'p-2', 'rounded', 'mb-2');
                message.innerText = userMessage.value;
                chatMessages.appendChild(message);
                userMessage.value = '';
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
        });

        // Popover functionality
        const popoverButton = document.querySelector('[data-popover-target]');
        const popover = document.getElementById(popoverButton.getAttribute('data-popover-target'));
        
        popoverButton.addEventListener('click', function () {
            const isVisible = popover.classList.contains('opacity-100');
            if (isVisible) {
                popover.classList.remove('opacity-100', 'visible');
                popover.classList.add('opacity-0', 'invisible');
            } else {
                popover.classList.remove('opacity-0', 'invisible');
                popover.classList.add('opacity-100', 'visible');
            }
        });
    });
</script>
